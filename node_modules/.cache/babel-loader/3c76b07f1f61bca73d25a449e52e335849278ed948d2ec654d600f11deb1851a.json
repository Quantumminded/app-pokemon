{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luca\\\\Documents\\\\GitHub\\\\pokemon-cards\\\\src\\\\components\\\\MemoryGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./MemoryGame.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoryGame = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      const response = await axios.get(\"https://pokeapi.co/api/v2/pokemon?limit=10\");\n      const pokemonData = response.data.results.map((pokemon, index) => ({\n        id: index + 1,\n        name: pokemon.name,\n        image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`\n      }));\n      const shuffledCards = [...pokemonData, ...pokemonData].sort(() => Math.random() - 0.5).map((card, index) => ({\n        ...card,\n        uniqueId: index\n      }));\n      setCards(shuffledCards);\n    };\n    fetchPokemon();\n  }, []);\n  const handleCardClick = card => {\n    if (flippedCards.length === 2 || matchedCards.includes(card.uniqueId)) return;\n    const newFlippedCards = [...flippedCards, card];\n    setFlippedCards(newFlippedCards);\n    if (newFlippedCards.length === 2) {\n      const [firstCard, secondCard] = newFlippedCards;\n      if (firstCard.id === secondCard.id) {\n        setMatchedCards([...matchedCards, firstCard.uniqueId, secondCard.uniqueId]);\n      }\n      setTimeout(() => setFlippedCards([]), 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pok\\xE9mon Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${flippedCards.includes(card) || matchedCards.includes(card.uniqueId) ? \"flipped\" : \"\"}`,\n        onClick: () => handleCardClick(card),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-front\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.image,\n            alt: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-back\",\n          children: \"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, card.uniqueId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoryGame, \"scDj1Dkan6zPS8vMaTHUD6xFV2A=\");\n_c = MemoryGame;\nexport default MemoryGame;\nvar _c;\n$RefreshReg$(_c, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MemoryGame","_s","cards","setCards","flippedCards","setFlippedCards","matchedCards","setMatchedCards","fetchPokemon","response","get","pokemonData","data","results","map","pokemon","index","id","name","image","shuffledCards","sort","Math","random","card","uniqueId","handleCardClick","length","includes","newFlippedCards","firstCard","secondCard","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/luca/Documents/GitHub/pokemon-cards/src/components/MemoryGame.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./MemoryGame.css\";\r\n\r\nconst MemoryGame = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [flippedCards, setFlippedCards] = useState([]);\r\n  const [matchedCards, setMatchedCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPokemon = async () => {\r\n      const response = await axios.get(\"https://pokeapi.co/api/v2/pokemon?limit=10\");\r\n      const pokemonData = response.data.results.map((pokemon, index) => ({\r\n        id: index + 1,\r\n        name: pokemon.name,\r\n        image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`,\r\n      }));\r\n      const shuffledCards = [...pokemonData, ...pokemonData]\r\n        .sort(() => Math.random() - 0.5)\r\n        .map((card, index) => ({ ...card, uniqueId: index }));\r\n      setCards(shuffledCards);\r\n    };\r\n\r\n    fetchPokemon();\r\n  }, []);\r\n\r\n  const handleCardClick = (card) => {\r\n    if (flippedCards.length === 2 || matchedCards.includes(card.uniqueId)) return;\r\n\r\n    const newFlippedCards = [...flippedCards, card];\r\n    setFlippedCards(newFlippedCards);\r\n\r\n    if (newFlippedCards.length === 2) {\r\n      const [firstCard, secondCard] = newFlippedCards;\r\n      if (firstCard.id === secondCard.id) {\r\n        setMatchedCards([...matchedCards, firstCard.uniqueId, secondCard.uniqueId]);\r\n      }\r\n      setTimeout(() => setFlippedCards([]), 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"memory-game\">\r\n      <h1>Pok√©mon Memory Game</h1>\r\n      <div className=\"card-grid\">\r\n        {cards.map((card) => (\r\n          <div\r\n            key={card.uniqueId}\r\n            className={`card ${flippedCards.includes(card) || matchedCards.includes(card.uniqueId) ? \"flipped\" : \"\"}`}\r\n            onClick={() => handleCardClick(card)}\r\n          >\r\n            <div className=\"card-front\">\r\n              <img src={card.image} alt={card.name} />\r\n            </div>\r\n            <div className=\"card-back\">?</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemoryGame;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,4CAA4C,CAAC;MAC9E,MAAMC,WAAW,GAAGF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,MAAM;QACjEC,EAAE,EAAED,KAAK,GAAG,CAAC;QACbE,IAAI,EAAEH,OAAO,CAACG,IAAI;QAClBC,KAAK,EAAE,4EAA4EH,KAAK,GAAG,CAAC;MAC9F,CAAC,CAAC,CAAC;MACH,MAAMI,aAAa,GAAG,CAAC,GAAGT,WAAW,EAAE,GAAGA,WAAW,CAAC,CACnDU,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BT,GAAG,CAAC,CAACU,IAAI,EAAER,KAAK,MAAM;QAAE,GAAGQ,IAAI;QAAEC,QAAQ,EAAET;MAAM,CAAC,CAAC,CAAC;MACvDb,QAAQ,CAACiB,aAAa,CAAC;IACzB,CAAC;IAEDZ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,eAAe,GAAIF,IAAI,IAAK;IAChC,IAAIpB,YAAY,CAACuB,MAAM,KAAK,CAAC,IAAIrB,YAAY,CAACsB,QAAQ,CAACJ,IAAI,CAACC,QAAQ,CAAC,EAAE;IAEvE,MAAMI,eAAe,GAAG,CAAC,GAAGzB,YAAY,EAAEoB,IAAI,CAAC;IAC/CnB,eAAe,CAACwB,eAAe,CAAC;IAEhC,IAAIA,eAAe,CAACF,MAAM,KAAK,CAAC,EAAE;MAChC,MAAM,CAACG,SAAS,EAAEC,UAAU,CAAC,GAAGF,eAAe;MAC/C,IAAIC,SAAS,CAACb,EAAE,KAAKc,UAAU,CAACd,EAAE,EAAE;QAClCV,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEwB,SAAS,CAACL,QAAQ,EAAEM,UAAU,CAACN,QAAQ,CAAC,CAAC;MAC7E;MACAO,UAAU,CAAC,MAAM3B,eAAe,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IAC7C;EACF,CAAC;EAED,oBACEN,OAAA;IAAKkC,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BnC,OAAA;MAAAmC,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BvC,OAAA;MAAKkC,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBhC,KAAK,CAACY,GAAG,CAAEU,IAAI,iBACdzB,OAAA;QAEEkC,SAAS,EAAE,QAAQ7B,YAAY,CAACwB,QAAQ,CAACJ,IAAI,CAAC,IAAIlB,YAAY,CAACsB,QAAQ,CAACJ,IAAI,CAACC,QAAQ,CAAC,GAAG,SAAS,GAAG,EAAE,EAAG;QAC1Gc,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAACF,IAAI,CAAE;QAAAU,QAAA,gBAErCnC,OAAA;UAAKkC,SAAS,EAAC,YAAY;UAAAC,QAAA,eACzBnC,OAAA;YAAKyC,GAAG,EAAEhB,IAAI,CAACL,KAAM;YAACsB,GAAG,EAAEjB,IAAI,CAACN;UAAK;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,eACNvC,OAAA;UAAKkC,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAP7Bd,IAAI,CAACC,QAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrC,EAAA,CAxDID,UAAU;AAAA0C,EAAA,GAAV1C,UAAU;AA0DhB,eAAeA,UAAU;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}